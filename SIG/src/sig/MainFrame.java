/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sig;

import java.awt.event.KeyEvent;
import java.io.*;
import java.time.LocalDate;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;



/**
 *
 * @author DELL
 */
public class MainFrame extends javax.swing.JFrame {

   private String new_invoice ="0";
   private String path="D:/first/FirstProject/SIG/src/sig/Invoices.csv";
   private String path_items="D:/first/FirstProject/SIG/src/sig/items.csv";
   private int inv_total=0,items_total=0;
   private LocalDate date = LocalDate.now();
    public MainFrame() {
        initComponents();
        panel1.setVisible(false);
    }
    public void SaveInvoice() {
   String line="";
  StringBuilder sb = new StringBuilder();
        try {
            PrintWriter writer = new PrintWriter(new File(path)); 
            int i=0; 
            while(Invoices.getValueAt(i,0)!=null){

                 sb.append(Invoices.getValueAt(i,0));
                 sb.append(",");
                 sb.append(Invoices.getValueAt(i,1));
                 sb.append(",");
                 sb.append(Invoices.getValueAt(i,2));
                 sb.append(",");
                 sb.append(Invoices.getValueAt(i,3));
                 sb.append("\n");
                 i++;
                 
            }
            writer.write(sb.toString());
            writer.close();

        } catch (FileNotFoundException e) {
            System.out.println(e.getMessage());
        }
        
    }
    public void LoadInvoice(){
        String line="";
int i=0;
        try { 
            BufferedReader br = new BufferedReader(new FileReader(path));
            while ((line = br.readLine()) != null) 
            {
                String val[]=line.split(",");
                Invoices.setValueAt(val[0], i, 0);
                Invoices.setValueAt(val[1], i, 1);
                Invoices.setValueAt(val[2], i, 2);
                Invoices.setValueAt(val[3], i, 3);
                i++;
                new_invoice=val[0];
            }
     
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        }
         catch (IOException e) {
            e.printStackTrace();
         }
    }
    public void createNewInvoice(){
        DefaultTableModel model =(DefaultTableModel)items.getModel();
        model.setNumRows(20);
        panel1.setVisible(true);
        Date.setText(date.toString());
        Name.setText("");  
        int number = Integer.parseInt(new_invoice)+1;
        new_invoice= String.valueOf(number); 
        num.setText(new_invoice);
        total.setText("");
        int i=0;
        while (model.getValueAt(i, 0) != null) 
            {   model.setValueAt("", i, 0); 
                model.setValueAt("", i, 1); 
                model.setValueAt("", i, 2); 
                model.setValueAt("", i, 3); 
                model.setValueAt("", i, 4); 
            i++;
            } 
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel1 = new java.awt.Panel();
        jScrollPane2 = new javax.swing.JScrollPane();
        items = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        saveItems = new javax.swing.JButton();
        cancel = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        num = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        total = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        Name = new javax.swing.JTextField();
        Date = new javax.swing.JTextField();
        panel2 = new java.awt.Panel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Invoices = new javax.swing.JTable();
        create = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileLoad = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        save = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        items.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "No.", "Item Name", "Item Price", "Count", "Item Total"
            }
        ));
        items.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                itemsMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                itemsMousePressed(evt);
            }
        });
        items.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                itemsInputMethodTextChanged(evt);
            }
        });
        items.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                itemsKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                itemsKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(items);

        panel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, 380, 370));

        jLabel2.setText("Invoice Number");
        panel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, -1));

        saveItems.setText("Save");
        saveItems.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveItemsActionPerformed(evt);
            }
        });
        panel1.add(saveItems, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 580, -1, -1));

        cancel.setText("Cancel");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });
        panel1.add(cancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 580, -1, -1));

        jLabel3.setText("Invoice Date");
        panel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, 80, -1));

        jLabel4.setText("Customer Name");
        panel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 90, -1));
        panel1.add(num, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 40, 210, 20));

        jLabel6.setText("Invoice Total");
        panel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 90, -1));
        panel1.add(total, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 130, 280, 20));

        jLabel8.setText("Invoice Items");
        panel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, -1, -1));
        panel1.add(Name, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 100, 260, -1));

        Date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DateActionPerformed(evt);
            }
        });
        panel1.add(Date, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 70, 260, -1));

        getContentPane().add(panel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, -20, 400, 620));
        panel1.getAccessibleContext().setAccessibleDescription("");

        panel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Invoices.setAutoCreateRowSorter(true);
        Invoices.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "No.", "Date", "Customer", "Total"
            }
        ));
        Invoices.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                InvoicesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Invoices);

        panel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 380, 480));

        create.setText("Create New Invoice");
        create.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createActionPerformed(evt);
            }
        });
        panel2.add(create, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 510, -1, -1));

        delete.setText("Delete Invoice");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        panel2.add(delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 510, -1, -1));

        getContentPane().add(panel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 400, 550));

        jLabel1.setText("Invoices Table");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        fileLoad.setText("File");

        jMenuItem2.setText("Load File");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        fileLoad.add(jMenuItem2);

        save.setText("Save File");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });
        fileLoad.add(save);

        jMenuBar1.add(fileLoad);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DateActionPerformed

    }//GEN-LAST:event_DateActionPerformed

    private void saveItemsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveItemsActionPerformed

  String line="";
  StringBuilder sb = new StringBuilder();
        try { 
           BufferedReader br = new BufferedReader(new FileReader(path_items));
            while ((line = br.readLine()) != null) 
            {
                sb.append(line);
                sb.append("\n");
               
                 
            }   
     
            PrintWriter writer = new PrintWriter(new File(path_items)); 
            int i=0; 
            while(items.getValueAt(i,0)!=null){
   
       
                 sb.append(num.getText());
                 sb.append(",");
                 sb.append(items.getValueAt(i,0));
                 sb.append(",");
                 sb.append(items.getValueAt(i,1));
                 sb.append(",");
                 sb.append(items.getValueAt(i,2));
                 sb.append(",");
                 sb.append(items.getValueAt(i,3));
                 sb.append(",");
                 sb.append(items_total);
                 sb.append("\n");
                 i++;
                 
            }
            writer.write(sb.toString());
            writer.close();
            BufferedReader brr = new BufferedReader(new FileReader(path));
            int invoice_num=0;
            while ((line = brr.readLine()) != null) 
            {
               invoice_num++;   
            }   
            
            String name=Name.getText();
            if(!name.isEmpty()){
            Invoices.setValueAt(num.getText(),invoice_num , 0);
            Invoices.setValueAt(Date.getText(),invoice_num , 1);
            Invoices.setValueAt(name,invoice_num , 2);
            Invoices.setValueAt(total.getText(),invoice_num , 3);
            
            }else{
                    JOptionPane.showMessageDialog(null,"You must enter all fields"); 
            }
            SaveInvoice();

        } catch (FileNotFoundException e) {
            System.out.println(e.getMessage());
        }
         catch (IOException e) {
            e.printStackTrace();
         }
    }//GEN-LAST:event_saveItemsActionPerformed

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
       LoadInvoice();
        createNewInvoice();
    }//GEN-LAST:event_cancelActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
LoadInvoice();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
   SaveInvoice();
        
    }//GEN-LAST:event_saveActionPerformed

    private void InvoicesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_InvoicesMouseClicked
          DefaultTableModel model =(DefaultTableModel)Invoices.getModel();
         
          panel1.setVisible(true);
          
          DefaultTableModel model1 = (DefaultTableModel) items.getModel();
          model1.setRowCount(0);
          int SelectedRowIndex=Invoices.getSelectedRow();
          
          num.setText(model.getValueAt(SelectedRowIndex,0).toString());
          Date.setText(model.getValueAt(SelectedRowIndex,1).toString());
          Name.setText(model.getValueAt(SelectedRowIndex,2).toString());
          total.setText(model.getValueAt(SelectedRowIndex,3).toString());
        String line=null;
        int i=0;
        try { 
            BufferedReader br = new BufferedReader(new FileReader(path_items));
            while ((line = br.readLine()) != null) 
            { String val[]=line.split(",");
                model1.setRowCount(i+1);
                if(val[0].equals(model.getValueAt(SelectedRowIndex,0).toString()) ){
                items.setValueAt(val[1], i, 0);
                items.setValueAt(val[2], i, 1);
                items.setValueAt(val[3], i, 2);
                items.setValueAt(val[4], i, 3);
                items.setValueAt(val[5], i, 4);
                i++;
                
                }
              
            }
  
        
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        }
         catch (IOException e) {
            e.printStackTrace();
         }
    }//GEN-LAST:event_InvoicesMouseClicked

    private void createActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createActionPerformed
        LoadInvoice();
        createNewInvoice();
        
        
    }//GEN-LAST:event_createActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        DefaultTableModel model =(DefaultTableModel)Invoices.getModel();
        DefaultTableModel table =(DefaultTableModel)items.getModel();
          int SelectedRowIndex=Invoices.getSelectedRow();
          
         String line="";
        StringBuilder sb = new StringBuilder();
        
        try { 
           
           BufferedReader br = new BufferedReader(new FileReader(path_items));
            while ((line = br.readLine()) != null) 
            { String val[]=line.split(",");
                System.out.println(val[0]);
                if(!val[0].equals(model.getValueAt(SelectedRowIndex,0).toString())){
                sb.append(line);
                sb.append("\n");
               
            }   
            } 
            PrintWriter writer = new PrintWriter(new File(path_items));
            writer.write(sb.toString());
            writer.close();
          
        }
         catch (IOException e) {
            e.printStackTrace();
         }
        int i=0;
             while(items.getValueAt(i,0)!=null){ 
             table.removeRow(i);
              
             }  
             model.removeRow(SelectedRowIndex);
             SaveInvoice();      
    }//GEN-LAST:event_deleteActionPerformed

    private void itemsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itemsMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_itemsMouseClicked

    private void itemsMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itemsMousePressed

    
    }//GEN-LAST:event_itemsMousePressed

    private void itemsInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_itemsInputMethodTextChanged

    }//GEN-LAST:event_itemsInputMethodTextChanged

    private void itemsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_itemsKeyPressed
    if(evt.getKeyCode()==KeyEvent.VK_ENTER){
        int i=0;
        inv_total=0;
      while(items.getValueAt(i,0)!=null){
                int price = Integer.parseInt(items.getValueAt(i,2).toString());
                int count = Integer.parseInt(items.getValueAt(i,3).toString());
       items_total=price*count;
       items.setValueAt(items_total, i, 4);
       inv_total=inv_total+items_total;
    i++;
            }
      String tatal_inv=inv_total+"";
            total.setText(tatal_inv);
             
    }
    }//GEN-LAST:event_itemsKeyPressed

    private void itemsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_itemsKeyReleased
     
    }//GEN-LAST:event_itemsKeyReleased

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_formKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Date;
    private javax.swing.JTable Invoices;
    private javax.swing.JTextField Name;
    private javax.swing.JButton cancel;
    private javax.swing.JButton create;
    private javax.swing.JButton delete;
    private javax.swing.JMenu fileLoad;
    private javax.swing.JTable items;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel num;
    private java.awt.Panel panel1;
    private java.awt.Panel panel2;
    private javax.swing.JMenuItem save;
    private javax.swing.JButton saveItems;
    private javax.swing.JLabel total;
    // End of variables declaration//GEN-END:variables
}
